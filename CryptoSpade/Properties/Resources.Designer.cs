//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CryptoSpade.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CryptoSpade.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AES description placeholder text..
        /// </summary>
        internal static string AES {
            get {
                return ResourceManager.GetString("AES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AES File description placeholder text..
        /// </summary>
        internal static string AESFile {
            get {
                return ResourceManager.GetString("AESFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Caesar algorithm works by taking an input string and an integer key.
        ///
        ///The key represents the amount of characters the alphabet will shift to the right..
        /// </summary>
        internal static string Caesar {
            get {
                return ResourceManager.GetString("Caesar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Caesar file description placeholder text..
        /// </summary>
        internal static string CaesarFile {
            get {
                return ResourceManager.GetString("CaesarFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rijndael description placeholder text..
        /// </summary>
        internal static string Rijndael {
            get {
                return ResourceManager.GetString("Rijndael", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rijndael file description placeholder text..
        /// </summary>
        internal static string RijndaelFile {
            get {
                return ResourceManager.GetString("RijndaelFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transposition algorithm works by taking an input string and a comma-seperated key that specifies the order of the columns to output.
        ///
        ///For example, the key 1,3,4,2 will print the columns in the following order:
        ///
        ///First column
        ///Third column
        ///Fourth column
        ///Second column
        ///
        ///The algorithm then transposes the characters in table according to the specified key and prints them in the specified order..
        /// </summary>
        internal static string Transposition {
            get {
                return ResourceManager.GetString("Transposition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This algorithm is not implemented yet..
        /// </summary>
        internal static string TranspositionFile {
            get {
                return ResourceManager.GetString("TranspositionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Vernam Algorithm works by taking an input string and key, then converting each character to a numerical value. 
        /// 
        ///The key must be the same length as the input string.  
        ///
        ///The algorithm then performs an XOR operation on the characters in the input string with the characters in the key. 
        /// 
        ///The integer output of the XOR operation is then converted back to a character string.
        ///
        ///Note: There are certain instances where the XOR of two characters will result in a reserved ASCII value such as an EOF (End o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Vernam {
            get {
                return ResourceManager.GetString("Vernam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vernam file description placeholder text..
        /// </summary>
        internal static string VernamFile {
            get {
                return ResourceManager.GetString("VernamFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Vigenere Tableau cipher takes an input string and a string key.
        ///
        ///The algorithm essentially works by writing the plaintext with the keyword repeated below it and uses each letter as a Caesar cipher key to encrypt the corresponding plaintext letter..
        /// </summary>
        internal static string Vigenere {
            get {
                return ResourceManager.GetString("Vigenere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vigenere file description placeholder text..
        /// </summary>
        internal static string VigenereFile {
            get {
                return ResourceManager.GetString("VigenereFile", resourceCulture);
            }
        }
    }
}
